import random

from aiogram.dispatcher.filters import Command
import csv
from db import BotDB
import logging
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton, Message, CallbackQuery


def pb():
    str1 = []
    with open("tpbook223.csv", encoding='utf-8') as r_file:
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç reader, —É–∫–∞–∑—ã–≤–∞–µ–º —Å–∏–º–≤–æ–ª-—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å ","
        file_reader = csv.reader(r_file, delimiter=";")
        # –°—á–µ—Ç—á–∏–∫ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫ –∏ –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å—Ç–æ–ª–±—Ü–æ–≤
        count = 0
        # –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV —Ñ–∞–π–ª–∞
        for row in file_reader:
            if count == 0:
                # –í—ã–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â–µ–π –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Å—Ç–æ–ª–±—Ü–æ–≤
                print(f'–§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç–æ–ª–±—Ü—ã: {", ".join(row)}')
            else:
                # –í—ã–≤–æ–¥ —Å—Ç—Ä–æ–∫
                # print(f'    {row[0]} - {row[1]} - {row[2]} -.')
                str1.append(row[0] + " " + row[1] + " " + row[2] + "\n")
            count += 1
        return str1


# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤
f = open('data/facts.txt', 'r', encoding='UTF-8')
facts = f.read().split('\n')
f.close()
# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–≥–æ–≤–æ—Ä–æ–∫
f = open('data/thinks.txt', 'r', encoding='UTF-8')
thinks = f.read().split('\n')
f.close()


def nt(str1):
    answer = random.choice(str1)
    return answer


# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–≥–æ–≤–æ—Ä–æ–∫
f = open('data/telefon.txt', 'r', encoding='UTF-8')
telf = f.read().split('\n')
f.close()

button_hi = KeyboardButton('–ü—Ä–∏–≤–µ—Ç! üëã')

greet_kb = ReplyKeyboardMarkup()
greet_kb.add(button_hi)

BotDB = BotDB('accountant.db')

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="5104763927:AAEc4bkq7nWqVKzeXOu-YF_Z5SjotTZn_7w")

# –î–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è –±–æ—Ç–∞
dp = Dispatcher(bot)
# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)

from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton

button_hi = KeyboardButton('–ü—Ä–∏–≤–µ—Ç! üëã')
button_tf = KeyboardButton('–¢–µ–ª–µ—Ñ–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞')

greet_kb = ReplyKeyboardMarkup()
greet_kb.add(button_hi)
greet_kb.add(button_tf)

str1 = pb()

@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.reply(nt(facts), reply_markup=greet_kb)


@dp.message_handler(commands=['hi1'])
async def process_hi1_command(message: types.Message):
    await message.reply("–ü–µ—Ä–≤–æ–µ - –∏–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã", reply_markup=greet_kb)


@dp.message_handler(commands=['hi2'])
async def process_hi1_command(message: types.Message):
    await message.reply(BotDB.get_records(32))


@dp.message_handler(commands=['hi3'])
async def process_hi1_command(message: types.Message):
       await message.reply(str1)


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /test1
@dp.message_handler(commands="test1")
async def cmd_test1(message: types.Message):
    await message.reply("Test 1")


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç!\n–ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!")


@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.reply("–ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏ —è –æ—Ç–ø—Ä–ø–∞–≤–ª—é —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç —Ç–µ–±–µ –≤ –æ—Ç–≤–µ—Ç!")


@dp.message_handler()
async def echo_message(msg: types.Message):
    await bot.send_message(msg.from_user.id, msg.text)


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    executor.start_polling(dp, skip_updates=True)

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
# bot.polling(none_stop=True, interval=0)
